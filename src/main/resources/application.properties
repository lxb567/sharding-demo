# sharding-jdbc 水平分表策略
# 配置数据源，给数据源起别名
spring.shardingsphere.enabled=true
spring.shardingsphere.datasource.names=m1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

# 配置数据源的具体内容，包含连接池，驱动，地址，用户名，密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.m1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/test?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=lxb567

spring.shardingsphere.rules.sharding.tables.course.actual-data-nodes=m1.course_$->{1..2}
spring.shardingsphere.rules.sharding.tables.course.table-strategy.standard.sharding-column=cid
spring.shardingsphere.rules.sharding.tables.course.table-strategy.standard.sharding-algorithm-name=course-inline
spring.shardingsphere.rules.sharding.tables.course.key-generate-strategy.column=cid
spring.shardingsphere.rules.sharding.tables.course.key-generate-strategy.key-generator-name=snowflake


spring.shardingsphere.rules.sharding.sharding-algorithms.course-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.course-inline.props.algorithm-expression=course_$->{cid % 2 +1}

spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=1







# 打开 sql 输出日志
spring.shardingsphere.props.sql-show=true

#mybatis-plus.mapper-locations=classpath:mapper/*.xml